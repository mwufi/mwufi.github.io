{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["data","random_","choices","Math","floor","random","length","title","to","css","rhythm","allMarkdownRemark","totalCount","edges","map","node","key","id","fields","slug","frontmatter","date","excerpt","query"],"mappings":"2FAAA,mI,sGAQe,sBAAe,IAAZA,EAAW,EAAXA,KA2BZC,EAAU,SAAAC,GAEZ,OAAOA,EADKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQI,UAIjD,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,MACA,uBACE,YAAC,OAAD,CAAMC,GAAE,KACN,kBACEC,IAAKA,YAAF,uCAGaC,YAAO,GAHpB,kBAIgBA,YAAO,GAJvB,MAOFT,EA7CQ,CACjB,UACA,SACA,WACA,SACA,SACA,UA+BM,IAQyBA,EArClB,CACb,SACA,YACA,SACA,WACA,UACA,YACA,YAsBM,IAQ2CA,EA3BpC,CACb,kBACA,gBACA,SACA,iBACA,qBAcM,UAWF,sBACGD,EAAKW,kBAAkBC,WAD1B,QAEyC,IAAtCZ,EAAKW,kBAAkBC,WAAmB,GAAK,KAEjDZ,EAAKW,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,IACb,YAAC,OAAD,CACET,GAAIO,EAAKG,OAAOC,KAChBV,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBC,YAAO,KADvB,MAIFK,EAAKK,YAAYb,MAAO,IACzB,oBACEE,IAAG,GADL,KAKKM,EAAKK,YAAYC,OAGxB,qBAAIN,EAAKO,iBAShB,IAAMC,EAAK","file":"component---src-pages-blog-js-8e6a2067174071636779.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Container from \"../components/container\"\nimport Header from \"../components/header\"\nimport SEO from \"../components/seo\"\n\nexport default ({ data }) => {\n  const adjectives = [\n    \"Amazing\",\n    \"Techno\",\n    \"Didactic\",\n    \"Living\",\n    \"Fierce\",\n    \"Witty\",\n  ]\n  const animal = [\n    \"Pandas\",\n    \"Pangolins\",\n    \"Eagles\",\n    \"Crickets\",\n    \"Puppies\",\n    \"Octopuses\",\n    \"Kitties\",\n  ]\n\n  const action = [\n    \"Writing Stories\",\n    \"Eating Mangos\",\n    \"Coding\",\n    \"Making History\",\n    \"Machine Learning\",\n  ]\n\n  let random_ = choices => {\n    var index = Math.floor(Math.random() * choices.length)\n    return choices[index]\n  }\n\n  return (\n    <Container>\n      <SEO title=\"Home\" />\n      <Header></Header>\n      <div>\n        <Link to={`/`}>\n          <h1\n            css={css`\n              max-width: 300px;\n              margin: 0;\n              margin-top: ${rhythm(4)};\n              margin-bottom: ${rhythm(4)};\n            `}\n          >\n            {random_(adjectives)} {random_(animal)} {random_(action)} Blog\n          </h1>\n        </Link>\n        <h4>\n          {data.allMarkdownRemark.totalCount} Post\n          {data.allMarkdownRemark.totalCount === 1 ? \"\" : \"s\"}\n        </h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  css={css`\n                    color: #bbb;\n                  `}\n                >\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
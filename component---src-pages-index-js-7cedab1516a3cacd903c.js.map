{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/title.js"],"names":["data","random_","choices","Math","floor","random","length","title","to","allMarkdownRemark","totalCount","edges","map","node","key","id","fields","slug","css","rhythm","frontmatter","date","excerpt","query","children"],"mappings":"2FAAA,0J,sGASe,sBAAe,IAAZA,EAAW,EAAXA,KA2BZC,EAAU,SAAAC,GAEZ,OAAOA,EADKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQI,UAIjD,OACE,8BACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,MACA,YAAC,IAAD,KACE,uBACE,YAAC,OAAD,CAAMC,GAAE,KACN,YAAC,IAAD,cACSP,EAvCA,CACjB,UACA,SACA,WACA,SACA,SACA,UAgCQ,IAC+BA,EA/B1B,CACb,SACA,YACA,SACA,WACA,UACA,YACA,YAuBQ,MACmDA,EArB9C,CACb,kBACA,gBACA,SACA,iBACA,qBAeQ,UAIF,sBACGD,EAAKS,kBAAkBC,WAD1B,QAEyC,IAAtCV,EAAKS,kBAAkBC,WAAmB,GAAK,KAEjDV,EAAKS,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,IACb,YAAC,OAAD,CACEP,GAAIK,EAAKG,OAAOC,KAChBC,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBC,YAAO,KADvB,MAIFN,EAAKO,YAAYb,MAAO,IACzB,oBACEW,IAAG,GADL,KAKKL,EAAKO,YAAYC,OAGxB,qBAAIR,EAAKS,kBAUlB,IAAMC,EAAK,c,kCCzFlB,sC,qDAIe,oBAAGC,EAAH,EAAGA,SAAH,OACb,mBACEN,IAAG,GAKH,kBACEA,IAAKA,YAAF,sOAaYC,YAAO,GAbnB,OAiBFK","file":"component---src-pages-index-js-7cedab1516a3cacd903c.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Container from \"../components/container\"\nimport Header from \"../components/header\"\nimport Title from \"../components/title\"\nimport SEO from \"../components/seo\"\n\nexport default ({ data }) => {\n  const adjectives = [\n    \"Amazing\",\n    \"Techno\",\n    \"Didactic\",\n    \"Living\",\n    \"Fierce\",\n    \"Witty\",\n  ]\n  const animal = [\n    \"Pandas\",\n    \"Pangolins\",\n    \"Eagles\",\n    \"Crickets\",\n    \"Puppies\",\n    \"Octopuses\",\n    \"Kitties\",\n  ]\n\n  const action = [\n    \"Writing Stories\",\n    \"Eating Mangos\",\n    \"Coding\",\n    \"Making History\",\n    \"Machine Learning\",\n  ]\n\n  let random_ = choices => {\n    var index = Math.floor(Math.random() * choices.length)\n    return choices[index]\n  }\n\n  return (\n    <>\n      <SEO title=\"Home\" />\n      <Header></Header>\n      <Container>\n        <div>\n          <Link to={`/`}>\n            <Title>\n              Zen's {random_(adjectives)} {random_(animal)} / {random_(action)} Blog\n            </Title>\n          </Link>\n          <h4>\n            {data.allMarkdownRemark.totalCount} Post\n            {data.allMarkdownRemark.totalCount === 1 ? \"\" : \"s\"}\n          </h4>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <div key={node.id}>\n              <Link\n                to={node.fields.slug}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <h3\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 4)};\n                  `}\n                >\n                  {node.frontmatter.title}{\" \"}\n                  <span\n                    css={css`\n                      color: #bbb;\n                    `}\n                  >\n                    â€” {node.frontmatter.date}\n                  </span>\n                </h3>\n                <p>{node.excerpt}</p>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n  <div\n    css={css`\n      display: block;\n      width: 100%;\n    `}\n  >\n    <h1\n      css={css`\n        display: block;\n        text-align: center;\n        background-color: rgba(255, 0, 0, 0.05);\n        margin-bottom: 3em;\n        margin-left: 2em;\n        margin-right: 2em;\n        padding: 2em;\n        border-radius: 7px;\n\n        @media only screen and (max-width: 600px) {\n          margin-left: 0;\n          margin-right: 0;\n          padding: ${rhythm(2)};\n        }\n      `}\n    >\n      {children}\n    </h1>\n  </div>\n)\n"],"sourceRoot":""}